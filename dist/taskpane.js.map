{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global console, document, Excel, Office */\r\n\r\nlet data_dictionary = {}; // Global data dictionary to store range info\r\n\r\nfunction stubBackendCall(instance_id) {\r\n  // Simulate a backend call to check the status of an instance_id\r\n  const status = [\"ready\"];\r\n  \r\n  CheckStatusOfInstance(instance_id);\r\n  \r\n  return status;\r\n}\r\n\r\n\r\nfunction pollStatus() {\r\n  Excel.run(async (context) => {\r\n\r\n    let allDone = true;\r\n\r\n    const progressBar = document.getElementById(\"progress-bar\");\r\n    if (!progressBar) throw new Error(\"Progress bar element not found.\");\r\n    progressBar.value = progressBar.value + 10;\r\n    \r\n    progressBar.className = \"\"; // Clear existing classes if any\r\n    progressBar.classList.add(\"progress-waiting\"); // Add a class for styling\r\n\r\n    for (const [key, value] of Object.entries(data_dictionary)) {\r\n      // Log the current status and instance_id\r\n      AddtoLog(`Range: ${key},  Instance ID: ${value.instance_id}, Status: ${value.status},`);\r\n      \r\n      if (value.status === \"pending\") {\r\n        allDone = false;\r\n\r\n        // Await the Promise returned by CheckStatusOfInstance\r\n        const isUpdated = await CheckStatusOfInstance(value.instance_id);\r\n\r\n        if (isUpdated === true) {\r\n          AddtoLog(`Wrote answer to cell to the right of range ${key}`);\r\n          data_dictionary[key].status = \"done\";\r\n        }\r\n      } else if (value.status === \"ready\") {\r\n        allDone = false;\r\n        AddtoLog(`Range ${key} is marked as ready. Retrying in the next poll.`);\r\n      }\r\n    }\r\n\r\n    // If all entries are done, set progress bar to green and 100%\r\n    if (allDone) {\r\n      const progressBar = document.getElementById(\"progress-bar\");\r\n      if (!progressBar) throw new Error(\"Progress bar element not found.\");\r\n      progressBar.value = 100;// When process is complete\r\n      progressBar.classList.remove(\"progress-waiting\");\r\n    }\r\n  }).catch((error) => {\r\n    console.error(\"Error in pollStatus:\", error);\r\n    AddtoLog(`Error in pollStatus: ${error.message}`);\r\n  });\r\n}\r\n\r\nOffice.onReady(() => {\r\n  document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n  document.getElementById(\"app-body\").style.display = \"flex\";\r\n\r\n \r\n  // Login button handler\r\n  document.getElementById(\"login-button\").onclick = handleLogin;\r\n\r\n  // Logout button handler\r\n  document.getElementById(\"logout-button\").onclick = handleLogout;\r\n\r\n\r\n\r\n  // Fetch worker list on login\r\n  const subscriptionKey = localStorage.getItem(\"subscriptionKey\");\r\n  const apiKey = localStorage.getItem(\"apiKey\");\r\n  if (subscriptionKey && apiKey) {\r\n    fetchWorkerList(subscriptionKey, apiKey);\r\n//document.getElementById(\"worker-section\").innerHTML = \"\"; // Clear existing content\r\nfetchWorkerList(subscriptionKey, apiKey); // Refresh worker list\r\n    document.getElementById(\"login-frame\").style.display = \"none\";\r\n} else {\r\n    document.getElementById(\"login-frame\").style.display = \"block\";\r\n  }\r\n\r\n  document.getElementById(\"run\").onclick = SubmitToAgent;\r\n\r\n  const progressBar = document.getElementById(\"progress-bar\");\r\n  if (progressBar) {\r\n    progressBar.value = 100;\r\n    progressBar.style.backgroundColor = \"green\"; // Initialize as green and 100%\r\n  }\r\n\r\n  // Attach handlers for the new buttons\r\n  \r\n\r\n\r\n  // Attach handler for the \"Clear Log\" button\r\n  document.getElementById(\"clear-log\").onclick = clearLog;\r\n  document.getElementById(\"clear-jobs\").onclick = clearJobs;\r\n  document.getElementById(\"status\").onclick = status;\r\n  \r\n\r\n  // Log the origin URL and IP address during initialization\r\n  const origin = window.location.origin;\r\n  AddtoLog(`Origin URL: ${origin}`);\r\n\r\n  async function logIPAddress() {\r\n    try {\r\n      const ipResponse = await fetch(\"https://api.ipify.org?format=json\");\r\n      if (ipResponse.ok) {\r\n        const ipData = await ipResponse.json();\r\n        AddtoLog(`IP Address: ${ipData.ip}`);\r\n      } else {\r\n        AddtoLog(`Failed to fetch IP address. Status: ${ipResponse.status}`);\r\n      }\r\n    } catch (error) {\r\n      AddtoLog(`Error fetching IP address: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  logIPAddress();\r\n\r\n  // Set up polling mechanism to run every 20 seconds\r\n  setInterval(pollStatus, 5000);\r\n});\r\n\r\n\r\nasync function updateExcelCell(sheetName, cellReference, answer) {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      AddtoLog(`Attempting to write to ${sheetName}!${cellReference}`);\r\n      \r\n      // Get the sheet by name\r\n      let sheet;\r\n      try {\r\n        sheet = context.workbook.worksheets.getItem(sheetName);\r\n      } catch (sheetError) {\r\n        AddtoLog(`ERROR: Sheet '${sheetName}' not found. ${sheetError.message}`);\r\n        return;\r\n      }\r\n      \r\n      // Get the cell and update it\r\n      try {\r\n        const cell = sheet.getRange(cellReference);\r\n        try {\r\n          cell.values = [[answer]];\r\n          cell.format.autofitRows();\r\n          await context.sync();\r\n          AddtoLog(`Successfully wrote to ${sheetName}!${cellReference}`);\r\n        } catch (cellError) {\r\n          if (cellError.message.includes(\"Excel is in cell-editing mode\")) {\r\n            AddtoLog(`Update canceled: Excel is in cell-editing mode for ${sheetName}!${cellReference}`);\r\n            if (data_dictionary[cellReference]) {\r\n              data_dictionary[cellReference].status = \"ready\";\r\n            }\r\n            return;\r\n          }\r\n          throw cellError;\r\n        }\r\n      } catch (cellError) {\r\n        AddtoLog(`ERROR: Could not update cell ${cellReference}. ${cellError.message}`);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    AddtoLog(`ERROR in updateExcelCell: ${error.message}`);\r\n    console.error(`Error updating cell ${cellReference} on sheet ${sheetName}:`, error);\r\n  }\r\n}\r\n\r\n\r\n// / Helper function to convert column number to letter\r\nfunction getColumnLetter(column) {\r\n    let temp, letter = '';\r\n    while (column > 0) {\r\n        temp = (column - 1) % 26;\r\n        letter = String.fromCharCode(temp + 65) + letter;\r\n        column = (column - (temp + 1)) / 26;\r\n    }\r\n    return letter;\r\n}\r\n\r\nfunction processAnswers(jsonString) {\r\n  try {\r\n    // Extract just the JSON portion from the string\r\n    const jsonStart = jsonString.indexOf('{');\r\n    const jsonEnd = jsonString.lastIndexOf('}') + 1;\r\n    const jsonPortion = jsonString.substring(jsonStart, jsonEnd);\r\n    \r\n    // Parse the JSON\r\n    const data = JSON.parse(jsonPortion);\r\n    \r\n    // Extract sheet name from the address\r\n    const addressMatch = data.address.match(/\\'([^\\']+)\\'/);\r\n    const sheetName = addressMatch ? addressMatch[1] : data.address.split('!')[0];\r\n    \r\n    AddtoLog(`Processing answers for sheet: ${sheetName}`);\r\n    \r\n    // Skip the header row if it exists\r\n    const answers = Array.isArray(data.values[0][0]) ? data.values.slice(1) : data.values;\r\n    \r\n    // Loop through each question/answer pair\r\n    answers.forEach((pair, index) => {\r\n      const question = pair[0];\r\n      const answer = pair[1];\r\n      \r\n      // Get row and column information\r\n      const row = data.rowIndex + index + 1; // Adjust based on your data structure\r\n      const column = data.columnIndex + 2; // Column to the right of the question\r\n      const colLetter = getColumnLetter(column);\r\n      const cellReference = `${colLetter}${row}`;\r\n      \r\n      AddtoLog(`Writing answer to ${sheetName}!${cellReference}: ${answer}`);\r\n      \r\n      // Update the Excel cell\r\n      updateExcelCell(sheetName, cellReference, answer);\r\n    });\r\n    \r\n    return answers;\r\n  } catch (error) {\r\n    AddtoLog(`ERROR processing answers: ${error.message}`);\r\n    console.error(\"Error processing JSON:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nfunction CheckStatusOfInstance(instance_id) {\r\n  return new Promise((resolve, reject) => {\r\n    const myHeaders = new Headers();\r\nconst subscriptionKey = localStorage.getItem(\"subscriptionKey\");\r\nconst apiKey = localStorage.getItem(\"apiKey\");\r\n\r\nif (subscriptionKey && apiKey) {\r\n    myHeaders.append(\"Ocp-Apim-Subscription-Key\", subscriptionKey);\r\n    myHeaders.append(\"API_KEY\", apiKey);\r\n} else {\r\n    console.error(\"Error: Keys are not available in local storage.\");\r\n}\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    // AddtoLog(`Checking status for instance ${instance_id}...`);\r\n\r\n    fetch(`https://fn-doozer-py-05.azurewebsites.net/api/Workflow/Instance?instance_id=${instance_id}`, requestOptions)\r\n      .then((response) => {\r\n        // AddtoLog(`Response status: ${response.status}`);\r\n        return response.text();\r\n      })\r\n      .then((result) => {\r\n        // Check if result is null or the string \"null\"\r\n        if (result === null || result === undefined || result === \"null\" || result.trim() === \"\") {\r\n          resolve(false);\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          const data = JSON.parse(result);\r\n\r\n          if (data.status !== \"complete\") {\r\n            AddtoLog(`Agent instance ${instance_id} is ${data.status}`);\r\n            resolve(false);\r\n            return;\r\n          }\r\n\r\n          // Fix the typo in property name\r\n          const dataDictionary = data.data_dictionary || data.data_dictinary;\r\n          if (dataDictionary) {\r\n            // AddtoLog(\"Data Dictionary found\");\r\n            AddtoLog(dataDictionary.final_answer);\r\n            \r\n            processAnswers(dataDictionary.final_answer);\r\n            resolve(true);\r\n          } else {\r\n            AddtoLog(\"Data Dictionary not found in response\");\r\n            resolve(false);\r\n          }\r\n        } catch (error) {\r\n          AddtoLog(\"Error parsing response: \" + error);\r\n          resolve(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        AddtoLog(\"Error in fetch: \" + error);\r\n        resolve(false);\r\n      });\r\n  });\r\n}\r\nfunction AddtoLog(message) {\r\n    const logWindow = document.getElementById(\"log-window\");\r\n    if (logWindow) {\r\n        const logMessage = document.createElement(\"p\");\r\n        logMessage.textContent = message;\r\n        logWindow.appendChild(logMessage);\r\n    } else {\r\n        console.error(\"Log window not found.\");\r\n    }\r\n}\r\n\r\n// // Handler for the \"AutoFill\" button\r\n// function handleAutoFill() {\r\n   \r\n//   const payload = {\"status\":\"pending\",\"instance_id\":\"\",\"columnIndex\":3}\r\n  \r\n//   data_dictionary['Sheet1!D19:E22'] = {\r\n//     status: \"pending\",\r\n//     instance_id: \"85d4947d-d24c-4f1a-81bf-35ccceccd80f\",\r\n//     columnIndex: 3,\r\n//     rowIndex: 18,  // Add this line with the starting row number\r\n//     sheetName: \"Sheet1\" // Add sheet name\r\n//   };\r\n\r\n//   pollStatus();\r\n// }\r\n\r\n\r\nfunction handleLogin() {\r\n  const subscriptionKey = document.getElementById(\"subscription-key\").value;\r\n  const apiKey = document.getElementById(\"api-key\").value;\r\n\r\n  if (!subscriptionKey || !apiKey) {\r\n    AddtoLog(\"Error: Both Subscription Key and API Key are required.\");\r\n    return;\r\n  }\r\n\r\nlocalStorage.setItem(\"subscriptionKey\", subscriptionKey);\r\nlocalStorage.setItem(\"apiKey\", apiKey);\r\n\r\ndocument.getElementById(\"subscription-key\").value = \"\";\r\ndocument.getElementById(\"api-key\").value = \"\";\r\n\r\nconst runButton = document.getElementById(\"run\");\r\nrunButton.disabled = false;\r\nrunButton.classList.remove(\"disabled-button\");\r\n\r\nAddtoLog(\"Keys saved successfully.\");\r\n  fetchWorkerList(subscriptionKey, apiKey);\r\n}\r\n\r\nfunction handleLogout() {\r\n  // Commented out to retain API key details between sessions\r\n  localStorage.removeItem(\"subscriptionKey\");\r\n  localStorage.removeItem(\"apiKey\");\r\n\r\n  AddtoLog(\"Logged out successfully.\");\r\n  document.getElementById(\"worker-section\").style.display = \"none\";\r\n\r\n  // Gray out the submit button\r\n  const runButton = document.getElementById(\"run\");\r\n  runButton.disabled = true;\r\n  runButton.classList.add(\"disabled-button\");\r\n\r\n  // Make login details reappear\r\nconst loginFrame = document.getElementById(\"login-frame\");\r\nloginFrame.style.display = \"block\";\r\n\r\ndocument.getElementById(\"subscription-key\").value = \"\";\r\ndocument.getElementById(\"api-key\").value = \"\";\r\n}\r\n\r\nfunction fetchWorkerList(subscriptionKey, apiKey) {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Ocp-Apim-Subscription-Key\", subscriptionKey);\r\n    myHeaders.append(\"API_KEY\", apiKey);\r\n\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        headers: myHeaders,\r\n        redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"https://fn-doozer-py-05.azurewebsites.net/api/worker?view_type=lite\", requestOptions)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch worker list. Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((result) => {\r\n            const dropdown = document.getElementById(\"worker-dropdown\");\r\n            dropdown.innerHTML = \"\"; // Clear existing options\r\n\r\n            if (result && Array.isArray(result.workers)) {\r\n                result.workers.forEach((worker) => {\r\n                    const option = document.createElement(\"option\");\r\n                    option.value = worker.WorkerID;\r\n                    option.textContent = worker.Name;\r\n                    dropdown.appendChild(option);\r\n                });\r\n            } else {\r\n                AddtoLog(\"Error: Worker list is not properly structured. Response: \" + JSON.stringify(result));\r\n            }\r\n\r\n            document.getElementById(\"worker-section\").style.display = \"flex\";\r\n            document.getElementById(\"run\").disabled = false;\r\n\r\n            // Hide login section after successful login\r\n            document.getElementById(\"login-frame\").style.display = \"none\";\r\n\r\n            AddtoLog(\"Worker list fetched successfully.\");\r\n        })\r\n        .catch((error) => {\r\n            AddtoLog(`Error fetching worker list: ${error.message}`);\r\n        });\r\n}\r\n\r\nfunction clearLog() {\r\n  const logWindow = document.getElementById(\"log-window\");\r\n  if (logWindow) {\r\n    logWindow.innerHTML = \"\";\r\n  }\r\n}\r\n\r\nfunction clearJobs() {\r\n  \r\n\r\n    try {\r\n      data_dictionary = {};\r\n    AddtoLog(`Cleared all jobs`);\r\n  } catch (error) {\r\n    AddtoLog(`${error}`);\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction status() {\r\n  AddtoLog(JSON.stringify(data_dictionary));\r\n\r\n}\r\n\r\nexport async function SubmitToAgent() {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      const range = context.workbook.getSelectedRange();\r\n\r\n      // Validate that a range is selected\r\n      if (!range) {\r\n        AddtoLog(\"Error: No range selected. Please select a range in Excel and try again.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Load the range address and values\r\n        range.load([\"address\", \"columnIndex\", \"rowIndex\", \"values\"]);\r\n        await context.sync();\r\n      } catch (error) {\r\n        AddtoLog(`Error: Failed to load range or sync context. Details: ${error.message}`);\r\n        throw error;\r\n      }\r\n\r\n      // Extract sheet name from range address\r\n      let sheetName = \"\";\r\n      const addressMatch = range.address.match(/'?([^'!]+)'?!/);\r\n      if (addressMatch && addressMatch[1]) {\r\n        sheetName = addressMatch[1];\r\n      } else {\r\n        sheetName = context.workbook.getActiveWorksheet().name;\r\n        await context.sync();\r\n      }\r\n\r\n      // Provide visual feedback on the button\r\n      const runButton = document.getElementById(\"run\");\r\n      if (!runButton) {\r\n        AddtoLog(\"Error: Run button not found.\");\r\n        return;\r\n      }\r\n      runButton.textContent = \"Processing...\";\r\n      const spinner = document.createElement(\"span\");\r\n      spinner.className = \"spinner\";\r\n      spinner.style.marginLeft = \"10px\";\r\n      spinner.style.border = \"2px solid #f3f3f3\";\r\n      spinner.style.borderTop = \"2px solid #0078d7\";\r\n      spinner.style.borderRadius = \"50%\";\r\n      spinner.style.width = \"16px\";\r\n      spinner.style.height = \"16px\";\r\n      spinner.style.animation = \"spin 1s linear infinite\";\r\n      runButton.appendChild(spinner);\r\n      runButton.disabled = true;\r\n\r\n      try {\r\n        const progressBar = document.getElementById(\"progress-bar\");\r\n        if (!progressBar) {\r\n          AddtoLog(\"Error: Progress bar element not found.\");\r\n          return;\r\n        }\r\n\r\n        progressBar.value = 0;\r\n        progressBar.className = \"\";\r\n        progressBar.classList.add(\"progress-waiting\");\r\n\r\n        const jsonData_string = JSON.stringify(range);\r\n\r\n        const prompt = document.getElementById(\"prompt\").value;\r\n\r\n        AddtoLog(prompt);\r\n        // Get the selected agent name from the dropdown\r\n        const workerDropdown = document.getElementById(\"worker-dropdown\");\r\n        const selectedAgentName = workerDropdown.options[workerDropdown.selectedIndex].textContent;\r\n\r\n        // Prepare the payload for the WebService\r\n        const payload = {\r\n          workflow_short_name: \"Agent Submit Excel\",\r\n          callback_url: \"\",\r\n          doozer_name: selectedAgentName,\r\n          variables: [\r\n            {\r\n              excelName: \"None\",\r\n              jsonData: jsonData_string,\r\n              guidance_prompt: prompt,\r\n            },\r\n          ],\r\n        };\r\n\r\n        const payloadString = JSON.stringify(payload);\r\n\r\n        // Send the data to the WebService\r\n        const response = await fetch(\"https://fn-doozer-py-05.azurewebsites.net/api/Queue\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Ocp-Apim-Subscription-Key\": localStorage.getItem(\"subscriptionKey\"),\r\n            \"API_KEY\": localStorage.getItem(\"apiKey\"),\r\n          },\r\n          body: payloadString,\r\n        });\r\n\r\n        progressBar.value = 10;\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Fetch failed with status: ${response.status} - ${response.statusText}`);\r\n        }\r\n\r\n        const responseText = await response.text();\r\n        try {\r\n          const responseData = JSON.parse(responseText);\r\n          AddtoLog(`Adding Instance ID: ${responseData.instance_id}`);\r\n\r\n          data_dictionary[range.address] = {\r\n            status: \"pending\",\r\n            instance_id: responseData.instance_id,\r\n            columnIndex: range.columnIndex,\r\n            rowIndex: range.rowIndex,\r\n            sheetName: sheetName,\r\n          };\r\n        } catch (parseError) {\r\n          AddtoLog(`Error parsing response: ${parseError.message}`);\r\n        }\r\n      } catch (error) {\r\n        AddtoLog(`Error during WebService submission: ${error.message}`);\r\n      } finally {\r\n        runButton.textContent = \"Submit to Agent\";\r\n        runButton.disabled = false;\r\n        const spinner = runButton.querySelector(\".spinner\");\r\n        if (spinner) {\r\n          runButton.removeChild(spinner);\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    AddtoLog(`Error in SubmitToAgent: ${error.message}`);\r\n    console.error(\"Error in SubmitToAgent:\", error);\r\n  }\r\n}\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>DoozerAI</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\" rel=\\\"noopener\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <style>.log-section{display:none;margin-top:20px}progress{width:100%;height:20px}progress::-webkit-progress-value{background-color:#4caf50;transition:background-color .3s}progress::-moz-progress-bar{background-color:#4caf50;transition:background-color .3s}progress{color:#4caf50}.progress-waiting::-webkit-progress-value{background-color:#ff9800}.progress-waiting::-moz-progress-bar{background-color:#ff9f0f}.progress-waiting{color:#ff9800}</style> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\" style=\\\"background-color:#fff\\\"> <header class=\\\"ms-welcome__header\\\" style=\\\"padding:20px;text-align:center;border-bottom:1px solid #ccc\\\"> <img width=\\\"45\\\" height=\\\"45\\\" src=\\\"https://9e71e85858541eaf8606320a54445b3e.cdn.bubble.io/cdn-cgi/image/w=96,h=96,f=auto,dpr=1,fit=contain/f1684798356661x367485263520903360/DALL_C2_B7E_202023-02-04_2020.59.02_20-_20the_20happiest_20ai_20robot_20ever-removebg-preview.png\\\" alt=\\\"\\\" title=\\\"DoozerAI\\\"/> <br> <img width=\\\"200\\\" height=\\\"45\\\" src=\\\"https://9e71e85858541eaf8606320a54445b3e.cdn.bubble.io/cdn-cgi/image/w=256,h=64,f=auto,dpr=2,fit=contain/f1698954832461x304677854375169340/Text.png\\\" alt=\\\"Contoso\\\" title=\\\"DoozerAI\\\"/> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <div id=\\\"login-frame\\\" style=\\\"margin-bottom:20px\\\"> <p class=\\\"ms-font-l\\\">Please log in to use the plugin.</p> <div id=\\\"login-section\\\"> <input type=\\\"text\\\" id=\\\"subscription-key\\\" placeholder=\\\"Enter Subscription Key\\\" class=\\\"ms-TextField\\\" style=\\\"padding:10px;font-size:1.1em;width:80%;margin-bottom:10px\\\"> <input type=\\\"text\\\" id=\\\"api-key\\\" placeholder=\\\"Enter API Key\\\" class=\\\"ms-TextField\\\" style=\\\"padding:10px;font-size:1.1em;width:80%;margin-bottom:10px\\\"> <button id=\\\"login-button\\\" class=\\\"ms-Button ms-Button--primary\\\" style=\\\"padding:10px 20px;font-size:1.1em;margin-top:10px\\\">Login</button> </div> </div> <div id=\\\"worker-section\\\" style=\\\"margin-bottom:20px\\\"> <label for=\\\"worker-dropdown\\\" class=\\\"ms-font-s\\\" style=\\\"margin-bottom:10px\\\">Agent:&nbsp;</label> <select id=\\\"worker-dropdown\\\" class=\\\"ms-TextField\\\" style=\\\"padding:10px;font-size:1.1em;width:80%;margin-bottom:10px\\\"></select> <button id=\\\"logout-button\\\" class=\\\"ms-Button ms-Button--secondary\\\" style=\\\"padding:5px 10px;font-size:.9em;position:absolute;bottom:10px;right:10px\\\">Logout</button> </div> <input type=\\\"text\\\" id=\\\"prompt\\\" placeholder=\\\"Optional guidance\\\" class=\\\"ms-TextField\\\" style=\\\"padding:10px;font-size:1.1em;width:80%;margin-bottom:10px\\\"> <br> <br><button id=\\\"run\\\" class=\\\"modern-button\\\">Submit to Agent</button> <p><label id=\\\"item-subject\\\"></label></p> <div id=\\\"form-filler\\\"> <div id=\\\"progress-container\\\"> <progress id=\\\"progress-bar\\\" value=\\\"0\\\" max=\\\"100\\\" style=\\\"width:100%;margin-top:10px\\\"></progress> </div> <br><br> </div> <div style=\\\"margin-top:20px\\\"> <label style=\\\"display:flex;align-items:center;cursor:pointer\\\"> <input type=\\\"checkbox\\\" id=\\\"show-log\\\" style=\\\"margin-right:8px\\\"> Show Log Window </label> </div> <div id=\\\"log-section\\\" class=\\\"log-section\\\" style=\\\"width:80%\\\"> <div id=\\\"log-window\\\" style=\\\"border:1px solid #ccc;padding:10px;margin-top:20px;height:200px;width:80%;overflow-y:auto\\\"> </div> <table> <tr><td><button id=\\\"status\\\" style=\\\"display:block;margin:10px auto;padding:5px 10px;font-size:.9em\\\">Check status</button></td></tr> <tr> <td><button id=\\\"clear-log\\\" style=\\\"display:block;margin:10px auto;padding:5px 10px;font-size:.9em\\\">Clear Log</button></td> <td><button id=\\\"clear-jobs\\\" style=\\\"display:block;margin:10px auto;padding:5px 10px;font-size:.9em\\\">Clear Jobs</button></td> </tr> </table> </div>   </main>  <\" + \"script>document.getElementById(\\\"show-log\\\").addEventListener(\\\"change\\\",(function(){document.getElementById(\\\"log-section\\\").style.display=this.checked?\\\"block\\\":\\\"none\\\"}))<\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_arrayLikeToArray","Array","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","data_dictionary","pollStatus","Excel","run","_ref","_callee","context","allDone","progressBar","_i","_Object$entries","_Object$entries$_i","_progressBar","_context","getElementById","className","classList","add","entries","isArray","_arrayWithHoles","_iterableToArrayLimit","toString","from","_unsupportedIterableToArray","_nonIterableRest","AddtoLog","concat","instance_id","status","CheckStatusOfInstance","remove","_x","error","console","message","_updateExcelCell","_callee4","sheetName","cellReference","answer","_context4","_ref2","_callee3","sheet","cell","_context3","workbook","worksheets","getItem","t0","getRange","format","autofitRows","sync","t1","includes","t2","_x5","reject","myHeaders","Headers","subscriptionKey","localStorage","apiKey","append","requestOptions","headers","redirect","fetch","response","text","result","trim","data","JSON","parse","dataDictionary","data_dictinary","final_answer","jsonString","jsonStart","indexOf","jsonEnd","lastIndexOf","jsonPortion","substring","addressMatch","address","match","split","answers","pair","index","row","rowIndex","colLetter","column","temp","letter","String","fromCharCode","getColumnLetter","columnIndex","_x2","_x3","_x4","updateExcelCell","processAnswers","logWindow","logMessage","createElement","textContent","appendChild","handleLogin","setItem","runButton","disabled","fetchWorkerList","handleLogout","removeItem","style","display","ok","json","dropdown","innerHTML","workers","worker","option","WorkerID","Name","stringify","clearLog","clearJobs","SubmitToAgent","_SubmitToAgent","_callee6","_context6","_ref3","_callee5","range","spinner","jsonData_string","prompt","workerDropdown","selectedAgentName","payload","payloadString","responseText","responseData","_spinner","_context5","getSelectedRange","load","getActiveWorksheet","marginLeft","border","borderTop","borderRadius","width","height","animation","options","selectedIndex","workflow_short_name","callback_url","doozer_name","variables","excelName","jsonData","guidance_prompt","body","statusText","parseError","querySelector","removeChild","_x6","Office","onReady","onclick","backgroundColor","origin","_logIPAddress","_callee2","ipResponse","ipData","_context2","ip","logIPAddress","setInterval","URL"],"sourceRoot":""}